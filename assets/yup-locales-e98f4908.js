var l=Object.prototype.toString,p=Error.prototype.toString,c=RegExp.prototype.toString,$=typeof Symbol<"u"?Symbol.prototype.toString:function(){return""},d=/^Symbol\((.*)\)(.*)$/;function b(e){if(e!==+e)return"NaN";var r=e===0&&1/e<0;return r?"-0":""+e}function u(e,r){if(r===void 0&&(r=!1),e===null||e===!0||e===!1)return""+e;var n=typeof e;if(n==="number")return b(e);if(n==="string")return r?'"'+e+'"':e;if(n==="function")return"[Function "+(e.name||"anonymous")+"]";if(n==="symbol")return $.call(e).replace(d,"Symbol($1)");var t=l.call(e).slice(8,-1);return t==="Date"?isNaN(e.getTime())?""+e:e.toISOString(e):t==="Error"||e instanceof Error?"["+p.call(e)+"]":t==="RegExp"?c.call(e):null}function s(e,r){var n=u(e,r);return n!==null?n:JSON.stringify(e,function(t,o){var a=u(this[t],r);return a!==null?a:o},2)}var h={default:"${path} no es válido.",required:"${path} es un campo obligatorio",oneOf:"${path} debe ser uno de los siguientes valores: ${values}",notOneOf:"${path} no debe ser uno de los siguientes valores: ${values}",notType:function(r){var n=r.path,t=r.type,o=r.value,a=r.originalValue,m=a!=null&&a!==o,i=n+" debe ser un `"+t+"` Tipo, "+("pero el valor final fue: `"+s(o,!0)+"`")+(m?" (Obtenido del valor `"+s(a,!0)+"`).":".");return o===null&&(i+='\n Si "nulo" es intencionalmente un valor vacío, asegúrese de marcar el esquema como `.nullable()`'),i}},g={length:"${path} debe tener exactamente ${length} caracteres",min:"${path} debe tener como mínimo ${min} caracteres",max:"${path} debe tener como máximo ${max} caracteres",matches:'${path} debe coincidir con lo siguiente: "${regex}"',email:"${path} debe ser un correo electrónico válido",url:"${path} debe ser una URL válida",trim:"${path} debe ser una cadena recortada",lowercase:"${path} debe ser una cadena en minúsculas",uppercase:"${path} debe ser una cadena en mayúsculas"},f={min:"${path} debe ser mayor o igual a ${min}",max:"${path} debe ser menor o igual a ${max}",lessThan:"${path} debe ser menor a ${less}",moreThan:"${path} debe ser mayor a ${more}",positive:"${path} debe ser un número positivo",negative:"${path} debe ser un número negativo",integer:"${path} debe ser un entero"},y={min:"El campo ${path} debe ser posterior a ${min}",max:"El campo ${path} debe ser anterior a ${max}"},x={},v={noUnknown:"El campo ${path} tiene claves no especificadas en el objeto"},S={min:"El campo ${path} debe tener como mínimo ${min} elementos",max:"El campo ${path} debe tener como máximo ${max} elementos"},E={__proto__:null,mixed:h,string:g,number:f,date:y,boolean:x,object:v,array:S};export{E as e};
